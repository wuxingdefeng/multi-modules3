<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:redis="http://www.springframework.org/schema/redis"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/redis
                        http://www.springframework.org/schema/redis/spring-redis-1.0.xsd">
    <description>spring-data-redis配置</description>
    <context:property-placeholder ignore-unresolvable="true" location="classpath:config/redisconfig.properties"/>

    <!-- redis连接池 -->
    <bean id="jedisConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis_max_idle}"></property>
        <property name="maxWaitMillis" value="${redis_max_wait}"></property>
        <property name="maxTotal" value="${redis_max_active}"></property>
        <property name="testOnBorrow" value="${redis_test_on_borrow}"></property>
    </bean>
    <!-- redis连接工厂 -->
    <bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis_addr}"></property>
        <property name="port" value="${redis_port}"></property>
        <!--<property name="password" value="${redis_auth}"></property>-->
        <property name="poolConfig" ref="jedisConfig"></property>
    </bean>



    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="redisConnectionFactory"/>
        <!--     如果不配置Serializer，那么存储的时候只能使用String，如果用对象类型存储，那么会提示错误 can't cast to String！！！-->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
        <!--开启事务-->
        <property name="enableTransactionSupport" value="true"/>
    </bean>
    <!-- 序列化 -->
   <!-- <bean id="jdkSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>-->

    <!-- 监听 -->
    <!--<bean id="smsMessageListener" class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
        <property name="delegate" ref="smsMessageDelegateListener" />
        <property name="serializer" ref="jdkSerializer" />
    </bean>-->

   <!-- <bean id="sendMessage" class="cn.springmvcTest.services.redisService.SendMessage">
    <property name="redisTemplate" ref="redisTemplate"/>
    </bean>-->

  <!--  <redis:listener-container>
        <redis:listener ref="smsMessageListener" method="handleMessage"
                        serializer="jdkSerializer" topic="sms_queue_web_online" />
    </redis:listener-container>-->

    <!-- jedis -->
    <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}" />&lt;!&ndash; 最大能够保持idel状态的对象数  &ndash;&gt;
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />&lt;!&ndash; 当调用borrow Object方法时，是否进行有效性检查 &ndash;&gt;
        <property name="maxTotal" value="60000" /> &lt;!&ndash; 最大分配的对象数 &ndash;&gt;
    </bean>-->
   <!-- <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="300" /> &lt;!&ndash; 最大能够保持idel状态的对象数  &ndash;&gt;
        <property name="maxTotal" value="60000" /> &lt;!&ndash; 最大分配的对象数 &ndash;&gt;
        <property name="testOnBorrow" value="true" /> &lt;!&ndash; 当调用borrow Object方法时，是否进行有效性检查 &ndash;&gt;
    </bean>-->

  <!--<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1" value="${redis.host}" />
        <constructor-arg index="2" value="${redis.port}" type="int" />
    </bean>-->
  <!--  <bean id="smsMessageDelegateListener"
          class="cn.springmvcTest.services.redisService.SmsMessageDelegateListener"/>-->
</beans>